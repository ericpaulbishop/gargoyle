--- a/target/linux/ar71xx/base-files/etc/diag.sh	2014-01-12 12:48:17.341022809 -0500
+++ b/target/linux/ar71xx/base-files/etc/diag.sh	2014-01-14 12:56:22.902046416 -0500
@@ -131,6 +131,7 @@
 	tl-wa901nd-v2 | \
 	tl-wr1041n-v2 | \
 	tl-wr1043nd | \
+	tl-wr1043nd-v2 | \
 	tl-wr741nd | \
 	tl-wr741nd-v4 | \
 	tl-wr841n-v1 | \
--- a/target/linux/ar71xx/base-files/etc/uci-defaults/leds	2014-01-12 12:48:17.341022809 -0500
+++ b/target/linux/ar71xx/base-files/etc/uci-defaults/leds	2014-01-14 12:56:22.902046416 -0500
@@ -163,7 +163,8 @@
 	ucidef_set_led_wlan "wlan" "WLAN" "tp-link:green:wlan" "phy0tpt"
 	;;
 
-tl-wr1043nd)
+tl-wr1043nd | \
+tl-wr1043nd-v2)
 	ucidef_set_led_usbdev "usb" "USB" "tp-link:green:usb" "1-1"
 	ucidef_set_led_wlan "wlan" "WLAN" "tp-link:green:wlan" "phy0tpt"
 	;;
--- a/target/linux/ar71xx/base-files/etc/uci-defaults/network	2014-01-12 12:48:17.341022809 -0500
+++ b/target/linux/ar71xx/base-files/etc/uci-defaults/network	2014-01-14 12:56:22.902046416 -0500
@@ -115,6 +115,13 @@
 	ucidef_add_switch_vlan "rtl8366rb" "2" "0 5t"
 	;;
 
+tl-wr1043nd-v2)
+	        ucidef_set_interfaces_lan_wan "eth1" "eth0"
+	        ucidef_add_switch "switch0" "1" "1"
+	        ucidef_add_switch_vlan "switch0" "1" "0 1 2 3 4"
+	        ucidef_add_switch_vlan "switch0" "2" "5 6"
+	        ;; 
+
 tl-wr2543n)
 	ucidef_set_interfaces_lan_wan "eth0.1" "eth0.2"
 	ucidef_add_switch "switch0" "1" "1"
--- a/target/linux/ar71xx/base-files/lib/ar71xx.sh	2014-01-12 12:48:17.301023462 -0500
+++ b/target/linux/ar71xx/base-files/lib/ar71xx.sh	2014-01-14 12:56:22.902046416 -0500
@@ -330,6 +330,9 @@
 	*TL-WR1043ND)
 		name="tl-wr1043nd"
 		;;
+	*"TL-WR1043ND v2")
+		name="tl-wr1043nd-v2"
+		;;
 	*TL-WR2543N*)
 		name="tl-wr2543n"
 		;;
--- a/target/linux/ar71xx/base-files/lib/upgrade/platform.sh	2014-01-12 12:48:17.301023462 -0500
+++ b/target/linux/ar71xx/base-files/lib/upgrade/platform.sh	2014-01-14 12:56:22.902046416 -0500
@@ -165,6 +165,7 @@
 	tl-wr941nd | \
 	tl-wr1041n-v2 | \
 	tl-wr1043nd | \
+	tl-wr1043nd-v2 | \
 	tl-wr2543n)
 		[ "$magic" != "0100" ] && {
 			echo "Invalid image type."
--- a/target/linux/ar71xx/config-3.3	2014-01-12 12:48:17.489020406 -0500
+++ b/target/linux/ar71xx/config-3.3	2014-01-14 12:56:22.902046416 -0500
@@ -63,6 +63,7 @@
 CONFIG_ATH79_MACH_TL_WDR4300=y
 CONFIG_ATH79_MACH_TL_WR1041N_V2=y
 CONFIG_ATH79_MACH_TL_WR1043ND=y
+CONFIG_ATH79_MACH_TL_WR1043ND_V2=y
 CONFIG_ATH79_MACH_TL_WR2543N=y
 CONFIG_ATH79_MACH_TL_WR703N=y
 CONFIG_ATH79_MACH_TL_WR741ND=y
--- a/target/linux/ar71xx/files/arch/mips/ath79/dev-eth.c	2014-01-12 12:48:17.453020988 -0500
+++ b/target/linux/ar71xx/files/arch/mips/ath79/dev-eth.c	2014-01-14 12:56:22.902046416 -0500
@@ -355,6 +355,26 @@
 	iounmap(base);
 }
 
+static void qca955x_set_speed_xmii(int speed)
+{
+	void __iomem *base;
+	u32 val = ath79_get_eth_pll(0, speed);
+
+	base = ioremap_nocache(AR71XX_PLL_BASE, AR71XX_PLL_SIZE);
+	__raw_writel(val, base + QCA955X_PLL_ETH_XMII_CONTROL_REG);
+	iounmap(base);
+}
+
+static void qca955x_set_speed_sgmii(int speed)
+{
+	void __iomem *base;
+	u32 val = ath79_get_eth_pll(1, speed);
+
+	base = ioremap_nocache(AR71XX_PLL_BASE, AR71XX_PLL_SIZE);
+	__raw_writel(val, base + QCA955X_PLL_ETH_SGMII_CONTROL_REG);
+	iounmap(base);
+}
+
 static void ath79_set_speed_dummy(int speed)
 {
 }
@@ -605,7 +625,6 @@
 		case ATH79_SOC_AR9341:
 		case ATH79_SOC_AR9342:
 		case ATH79_SOC_AR9344:
-		case ATH79_SOC_QCA9558:
 			switch (pdata->phy_if_mode) {
 			case PHY_INTERFACE_MODE_MII:
 			case PHY_INTERFACE_MODE_GMII:
@@ -617,6 +636,17 @@
 			}
 			break;
 
+		case ATH79_SOC_QCA9558:
+			switch (pdata->phy_if_mode) {
+			case PHY_INTERFACE_MODE_MII:
+			case PHY_INTERFACE_MODE_RGMII:
+			case PHY_INTERFACE_MODE_SGMII:
+				break;
+			default:
+				return -EINVAL;
+			}
+			break;
+
 		default:
 			BUG();
 		}
@@ -654,7 +684,6 @@
 		case ATH79_SOC_AR9341:
 		case ATH79_SOC_AR9342:
 		case ATH79_SOC_AR9344:
-		case ATH79_SOC_QCA9558:
 			switch (pdata->phy_if_mode) {
 			case PHY_INTERFACE_MODE_MII:
 			case PHY_INTERFACE_MODE_GMII:
@@ -664,6 +693,17 @@
 			}
 			break;
 
+		case ATH79_SOC_QCA9558:
+			switch (pdata->phy_if_mode) {
+			case PHY_INTERFACE_MODE_MII:
+			case PHY_INTERFACE_MODE_RGMII:
+			case PHY_INTERFACE_MODE_SGMII:
+				break;
+			default:
+				return -EINVAL;
+			}
+			break;
+
 		default:
 			BUG();
 		}
@@ -885,7 +925,6 @@
 	case ATH79_SOC_AR9341:
 	case ATH79_SOC_AR9342:
 	case ATH79_SOC_AR9344:
-	case ATH79_SOC_QCA9558:
 		if (id == 0) {
 			pdata->reset_bit = AR934X_RESET_GE0_MAC |
 					   AR934X_RESET_GE0_MDIO;
@@ -914,6 +953,29 @@
 			pdata->fifo_cfg3 = 0x01f00140;
 		break;
 
+	case ATH79_SOC_QCA9558:
+		if (id == 0) {
+			pdata->reset_bit = QCA955X_RESET_GE0_MAC |
+					   QCA955X_RESET_GE0_MDIO;
+			pdata->set_speed = qca955x_set_speed_xmii;
+		} else {
+			pdata->reset_bit = QCA955X_RESET_GE1_MAC |
+					   QCA955X_RESET_GE1_MDIO;
+			pdata->set_speed = qca955x_set_speed_sgmii;
+		}
+
+		pdata->ddr_flush = ath79_ddr_no_flush;
+		pdata->has_gbit = 1;
+		pdata->is_ar724x = 1;
+
+		if (!pdata->fifo_cfg1)
+			pdata->fifo_cfg1 = 0x0010ffff;
+		if (!pdata->fifo_cfg2)
+			pdata->fifo_cfg2 = 0x015500aa;
+		if (!pdata->fifo_cfg3)
+			pdata->fifo_cfg3 = 0x01f00140;
+		break;
+
 	default:
 		BUG();
 	}
@@ -921,6 +983,7 @@
 	switch (pdata->phy_if_mode) {
 	case PHY_INTERFACE_MODE_GMII:
 	case PHY_INTERFACE_MODE_RGMII:
+	case PHY_INTERFACE_MODE_SGMII:
 		if (!pdata->has_gbit) {
 			printk(KERN_ERR "ar71xx: no gbit available on eth%d\n",
 					id);
@@ -943,7 +1006,6 @@
 		case ATH79_SOC_AR9341:
 		case ATH79_SOC_AR9342:
 		case ATH79_SOC_AR9344:
-		case ATH79_SOC_QCA9558:
 			if (id == 0)
 				pdata->mii_bus_dev = &ath79_mdio0_device.dev;
 			else
@@ -956,6 +1018,10 @@
 			pdata->mii_bus_dev = &ath79_mdio1_device.dev;
 			break;
 
+		case ATH79_SOC_QCA9558:
+			/* don't assign any MDIO device by default */
+			break;
+
 		default:
 			pdata->mii_bus_dev = &ath79_mdio0_device.dev;
 			break;
--- /dev/null	2014-01-10 09:11:41.352479244 -0500
+++ b/target/linux/ar71xx/files/arch/mips/ath79/mach-tl-wr1043nd-v2.c	2014-01-14 12:56:22.898046481 -0500
@@ -0,0 +1,224 @@
+/*
+ * TP-LINK TL-WR1043ND v2 board support
+ *
+ * Copyright (c) 2013 Gabor Juhos <juhosg@openwrt.org>
+ *
+ * Based on the Qualcomm Atheros AP135/AP136 reference board support code
+ *   Copyright (c) 2012 Qualcomm Atheros
+ *
+ * Permission to use, copy, modify, and/or distribute this software for any
+ * purpose with or without fee is hereby granted, provided that the above
+ * copyright notice and this permission notice appear in all copies.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
+ * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
+ * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
+ * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
+ * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
+ * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
+ * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
+ *
+ */
+
+#include <linux/phy.h>
+#include <linux/gpio.h>
+#include <linux/platform_device.h>
+#include <linux/ar8216_platform.h>
+
+#include <asm/mach-ath79/ar71xx_regs.h>
+
+#include "common.h"
+#include "dev-eth.h"
+#include "dev-gpio-buttons.h"
+#include "dev-leds-gpio.h"
+#include "dev-m25p80.h"
+#include "dev-spi.h"
+#include "dev-usb.h"
+#include "dev-wmac.h"
+#include "machtypes.h"
+
+#define TL_WR1043_V2_GPIO_LED_WLAN	12
+#define TL_WR1043_V2_GPIO_LED_USB	15
+#define TL_WR1043_V2_GPIO_LED_WPS	18
+#define TL_WR1043_V2_GPIO_LED_SYSTEM	19
+
+#define TL_WR1043_V2_GPIO_BTN_RESET	16
+#define TL_WR1043_V2_GPIO_BTN_WLAN	17
+
+#define TL_WR1043_V2_GPIO_USB_POWER	21
+
+#define TL_WR1043_V2_KEYS_POLL_INTERVAL	20	/* msecs */
+#define TL_WR1043_V2_KEYS_DEBOUNCE_INTERVAL (3 * TL_WR1043_V2_KEYS_POLL_INTERVAL)
+
+#define TL_WR1043_V2_WMAC_CALDATA_OFFSET	0x1000
+
+static const char *wr1043nd_v2_part_probes[] = {
+	"tp-link",
+	NULL,
+};
+
+static struct flash_platform_data wr1043nd_v2_flash_data = {
+	.part_probes	= wr1043nd_v2_part_probes,
+};
+
+static struct gpio_led tl_wr1043_v2_leds_gpio[] __initdata = {
+	{
+		.name		= "tp-link:green:wps",
+		.gpio		= TL_WR1043_V2_GPIO_LED_WPS,
+		.active_low	= 1,
+	},
+	{
+		.name		= "tp-link:green:system",
+		.gpio		= TL_WR1043_V2_GPIO_LED_SYSTEM,
+		.active_low	= 1,
+	},
+	{
+		.name		= "tp-link:green:wlan",
+		.gpio		= TL_WR1043_V2_GPIO_LED_WLAN,
+		.active_low	= 1,
+	},
+	{
+		.name		= "tp-link:green:usb",
+		.gpio		= TL_WR1043_V2_GPIO_LED_USB,
+		.active_low	= 1,
+	},
+};
+
+static struct gpio_keys_button tl_wr1043_v2_gpio_keys[] __initdata = {
+	{
+		.desc		= "reset",
+		.type		= EV_KEY,
+		.code		= KEY_RESTART,
+		.debounce_interval = TL_WR1043_V2_KEYS_DEBOUNCE_INTERVAL,
+		.gpio		= TL_WR1043_V2_GPIO_BTN_RESET,
+		.active_low	= 1,
+	},
+	{
+		.desc		= "wps",
+		.type		= EV_KEY,
+		.code		= KEY_WPS_BUTTON,
+		.debounce_interval = TL_WR1043_V2_KEYS_DEBOUNCE_INTERVAL,
+		.gpio		= TL_WR1043_V2_GPIO_BTN_WLAN,
+		.active_low	= 1,
+	},
+};
+
+/* GMAC0 of the AR8327 switch is connected to the QCA9558 SoC via SGMII */
+static struct ar8327_pad_cfg wr1043nd_v2_ar8327_pad0_cfg = {
+	.mode = AR8327_PAD_MAC_SGMII,
+	/*.sgmii_delay_en = true, */
+};
+
+/* GMAC6 of the AR8327 switch is connected to the QCA9558 SoC via RGMII */
+static struct ar8327_pad_cfg wr1043nd_v2_ar8327_pad6_cfg = {
+	.mode = AR8327_PAD_MAC_RGMII,
+	.txclk_delay_en = true,
+	.rxclk_delay_en = true,
+	.txclk_delay_sel = AR8327_CLK_DELAY_SEL1,
+	.rxclk_delay_sel = AR8327_CLK_DELAY_SEL2,
+};
+
+static struct ar8327_led_cfg wr1043nd_v2_ar8327_led_cfg = {
+	.led_ctrl0 = 0xcc35cc35,
+	.led_ctrl1 = 0xca35ca35,
+	.led_ctrl2 = 0xc935c935,
+	.led_ctrl3 = 0x03ffff00,
+	.open_drain = true,
+};
+
+static struct ar8327_platform_data wr1043nd_v2_ar8327_data = {
+	.pad0_cfg = &wr1043nd_v2_ar8327_pad0_cfg,
+	.pad6_cfg = &wr1043nd_v2_ar8327_pad6_cfg,
+	.cpuport_cfg = {
+		.force_link = 1,
+		.speed = AR8327_PORT_SPEED_1000,
+		.duplex = 1,
+		.txpause = 1,
+		.rxpause = 1,
+	},
+       .port6_cfg = { 
+               .force_link = 1, 
+               .speed = AR8327_PORT_SPEED_1000, 
+               .duplex = 1, 
+               .txpause = 1, 
+               .rxpause = 1, 
+	},
+	.led_cfg = &wr1043nd_v2_ar8327_led_cfg,
+};
+
+static struct mdio_board_info wr1043nd_v2_mdio0_info[] = {
+	{
+		.bus_id = "ag71xx-mdio.0",
+		.phy_addr = 0,
+		.platform_data = &wr1043nd_v2_ar8327_data,
+	},
+};
+
+static void __init wr1043nd_v2_gmac_setup(void)
+{
+	void __iomem *base;
+	u32 t;
+
+	base = ioremap(QCA955X_GMAC_BASE, QCA955X_GMAC_SIZE);
+
+	t = __raw_readl(base + QCA955X_GMAC_REG_ETH_CFG);
+
+	t &= ~(QCA955X_ETH_CFG_RGMII_EN | QCA955X_ETH_CFG_GE0_SGMII);
+	t |= QCA955X_ETH_CFG_RGMII_EN;
+
+	__raw_writel(t, base + QCA955X_GMAC_REG_ETH_CFG);
+
+	iounmap(base);
+}
+
+static void __init tl_wr1043nd_v2_setup(void)
+{
+	u8 *mac = (u8 *) KSEG1ADDR(0x1f01fc00);
+	u8 *art = (u8 *) KSEG1ADDR(0x1fff0000);
+	u8 tmpmac[ETH_ALEN];
+
+	ath79_register_m25p80(&wr1043nd_v2_flash_data);
+
+	ath79_register_leds_gpio(-1, ARRAY_SIZE(tl_wr1043_v2_leds_gpio),
+				 tl_wr1043_v2_leds_gpio);
+	ath79_register_gpio_keys_polled(-1, TL_WR1043_V2_KEYS_POLL_INTERVAL,
+					ARRAY_SIZE(tl_wr1043_v2_gpio_keys),
+					tl_wr1043_v2_gpio_keys);
+
+	ath79_init_mac(tmpmac, mac, -1);
+	ath79_register_wmac(art + TL_WR1043_V2_WMAC_CALDATA_OFFSET, tmpmac);
+
+	mdiobus_register_board_info(wr1043nd_v2_mdio0_info,
+				    ARRAY_SIZE(wr1043nd_v2_mdio0_info));
+	ath79_register_mdio(0, 0x0);
+
+	wr1043nd_v2_gmac_setup();
+
+	/* GMAC0 is connected to the RMGII interface */
+	ath79_eth0_data.phy_if_mode = PHY_INTERFACE_MODE_RGMII;
+	ath79_eth0_data.phy_mask = BIT(0);
+	ath79_eth0_data.mii_bus_dev = &ath79_mdio0_device.dev;
+	ath79_eth0_pll_data.pll_1000 = 0x56000000;
+
+	ath79_init_mac(ath79_eth0_data.mac_addr, mac, 1);
+	ath79_register_eth(0);
+
+	/* GMAC1 is connected to the SGMII interface */
+	ath79_eth1_data.phy_if_mode = PHY_INTERFACE_MODE_SGMII;
+	ath79_eth1_data.speed = SPEED_1000;
+	ath79_eth1_data.duplex = DUPLEX_FULL;
+	ath79_eth1_pll_data.pll_1000 = 0x03000101;
+
+	ath79_init_mac(ath79_eth1_data.mac_addr, mac, 0);
+	ath79_register_eth(1);
+
+	ath79_register_usb();
+
+	gpio_request_one(TL_WR1043_V2_GPIO_USB_POWER,
+			 GPIOF_OUT_INIT_HIGH | GPIOF_EXPORT_DIR_FIXED,
+			 "USB power");
+}
+
+MIPS_MACHINE(ATH79_MACH_TL_WR1043ND_V2, "TL-WR1043ND-v2",
+	     "TP-LINK TL-WR1043ND v2", tl_wr1043nd_v2_setup);
+
--- a/target/linux/ar71xx/files/drivers/net/ethernet/atheros/ag71xx/ag71xx_main.c	2014-01-12 12:48:17.377022226 -0500
+++ b/target/linux/ar71xx/files/drivers/net/ethernet/atheros/ag71xx/ag71xx_main.c	2014-01-14 12:56:22.898046481 -0500
@@ -1071,7 +1071,7 @@
 		goto err_out;
 	}
 
-	if (pdata->mii_bus_dev == NULL) {
+	if (pdata->mii_bus_dev == NULL && pdata->phy_mask) {
 		dev_err(&pdev->dev, "no MII bus device specified\n");
 		err = -EINVAL;
 		goto err_out;
--- a/target/linux/ar71xx/image/Makefile	2014-01-12 12:48:17.493020339 -0500
+++ b/target/linux/ar71xx/image/Makefile	2014-01-14 12:56:22.902046416 -0500
@@ -870,7 +870,10 @@
 $(eval $(call SingleProfile,TPLINK,$(fs_64kraw),TLWR941NV2,tl-wr941nd-v2,TL-WR941ND,ttyS0,115200,0x09410002,2,4M))
 $(eval $(call SingleProfile,TPLINK,$(fs_64kraw),TLWR941NV3,tl-wr941nd-v3,TL-WR941ND,ttyS0,115200,0x09410002,2,4M))
 $(eval $(call SingleProfile,TPLINK,$(fs_64kraw),TLWR941NV4,tl-wr941nd-v4,TL-WR741ND,ttyS0,115200,0x09410004,1,4M))
-$(eval $(call SingleProfile,TPLINK,$(fs_64kraw),TLWR1043,tl-wr1043nd-v1,TL-WR1043ND,ttyS0,115200,0x10430001,1,8M))
+$(eval $(call SingleProfile,TPLINK,$(fs_64kraw),TLWR1043V1,tl-wr1043nd-v1,TL-WR1043ND,ttyS0,115200,0x10430001,1,8M))
+
+$(eval $(call SingleProfile,TPLINK-LZMA,$(fs_64kraw),TLWR1043V2,tl-wr1043nd-v2,TL-WR1043ND-v2,ttyS0,115200,0x10430002,1,8M))
+
 
 $(eval $(call SingleProfile,TPLINK-LZMA,$(fs_64kraw),TLMR11U,tl-mr11u-v1,TL-MR11U,ttyATH0,115200,0x00110101,1,4Mlzma))
 $(eval $(call SingleProfile,TPLINK-LZMA,$(fs_64kraw),TLMR3020,tl-mr3020-v1,TL-MR3020,ttyATH0,115200,0x30200001,1,4Mlzma))
@@ -925,6 +928,7 @@
 $(eval $(call MultiProfile,TLWR741,TLWR741NV1 TLWR741NV2 TLWR741NV4))
 $(eval $(call MultiProfile,TLWR841,TLWR841NV15 TLWR841NV3 TLWR841NV5 TLWR841NV7 TLWR841NV8))
 $(eval $(call MultiProfile,TLWR941,TLWR941NV2 TLWR941NV3 TLWR941NV4))
+$(eval $(call MultiProfile,TLWR1043,TLWR1043V1 TLWR1043V2))
 $(eval $(call MultiProfile,TLWDR4300,TLWDR3600V1 TLWDR4300V1 TLWDR4310V1))
 $(eval $(call MultiProfile,UBNT,UBNTAIRROUTER UBNTRS UBNTRSPRO UBNTLSSR71 UBNTBULLETM UBNTROCKETM UBNTNANOM UBNTUNIFI UBNTUNIFIOUTDOOR))
 $(eval $(call MultiProfile,WNDR3700,WNDR3700V1 WNDR3700V2 WNDR3800 WNDRMAC WNDRMACV2))
--- a/target/linux/ar71xx/patches-3.3/601-MIPS-ath79-add-more-register-defines.patch	2014-01-12 12:48:17.565019167 -0500
+++ b/target/linux/ar71xx/patches-3.3/601-MIPS-ath79-add-more-register-defines.patch	2014-01-14 12:56:22.902046416 -0500
@@ -166,7 +166,7 @@
  #define AR934X_GPIO_REG_FUNC		0x6c
  
  #define AR71XX_GPIO_COUNT		16
-@@ -550,4 +618,139 @@
+@@ -550,4 +618,181 @@
  #define AR934X_SRIF_DPLL2_OUTDIV_SHIFT	13
  #define AR934X_SRIF_DPLL2_OUTDIV_MASK	0x7
  
@@ -302,7 +302,49 @@
 +
 +#define QCA955X_GMAC_REG_ETH_CFG	0x00
 +
++#define QCA955X_ETH_CFG_RGMII_EN	BIT(0)
++#define QCA955X_ETH_CFG_GE0_SGMII	BIT(6)
++
++ /* FIRSTLINE OF NEW CRAP FOR 1043v2 */
++#define QCA955X_PLL_ETH_XMII_CONTROL_REG	0x28
++#define QCA955X_PLL_ETH_SGMII_CONTROL_REG	0x48
++ 
++#define QCA955X_PLL_CPU_CONFIG_NFRAC_SHIFT	0
++#define QCA955X_PLL_CPU_CONFIG_NFRAC_MASK	0x3f
++
++#define QCA955X_RESET_HOST		BIT(31)
++#define QCA955X_RESET_SLIC		BIT(30)
++#define QCA955X_RESET_HDMA		BIT(29)
++#define QCA955X_RESET_EXTERNAL		BIT(28)
++#define QCA955X_RESET_RTC		BIT(27)
++#define QCA955X_RESET_PCIE_EP_INT	BIT(26)
++#define QCA955X_RESET_CHKSUM_ACC	BIT(25)
++#define QCA955X_RESET_FULL_CHIP		BIT(24)
++#define QCA955X_RESET_GE1_MDIO		BIT(23)
++#define QCA955X_RESET_GE0_MDIO		BIT(22)
++#define QCA955X_RESET_CPU_NMI		BIT(21)
++#define QCA955X_RESET_CPU_COLD		BIT(20)
++#define QCA955X_RESET_HOST_RESET_INT	BIT(19)
++#define QCA955X_RESET_PCIE_EP		BIT(18)
++#define QCA955X_RESET_UART1		BIT(17)
++#define QCA955X_RESET_DDR		BIT(16)
++#define QCA955X_RESET_USB_PHY_PLL_PWD_EXT BIT(15)
++#define QCA955X_RESET_NANDF		BIT(14)
++#define QCA955X_RESET_GE1_MAC		BIT(13)
++#define QCA955X_RESET_SGMII_ANALOG	BIT(12)
++#define QCA955X_RESET_USB_PHY_ANALOG	BIT(11)
++#define QCA955X_RESET_HOST_DMA_INT	BIT(10)
++#define QCA955X_RESET_GE0_MAC		BIT(9)
++#define QCA955X_RESET_SGMII		BIT(8)
++#define QCA955X_RESET_PCIE_PHY		BIT(7)
++#define QCA955X_RESET_PCIE		BIT(6)
++#define QCA955X_RESET_USB_HOST		BIT(5)
++#define QCA955X_RESET_USB_PHY		BIT(4)
++#define QCA955X_RESET_USBSUS_OVERRIDE	BIT(3)
++#define QCA955X_RESET_LUT		BIT(2)
++#define QCA955X_RESET_MBOX		BIT(1)
++#define QCA955X_RESET_I2S		BIT(0)
 +#define QCA955X_ETH_CFG_RGMII_GMAC0	BIT(0)
 +#define QCA955X_ETH_CFG_SGMII_GMAC0	BIT(6)
-+
++ /* END NEW CRAP FOR 1043V2*/
  #endif /* __ASM_MACH_AR71XX_REGS_H */
--- /dev/null	2014-01-10 09:11:41.352479244 -0500
+++ b/target/linux/ar71xx/patches-3.3/635-MIPS-ath79-add-TL-WR1043NDv2-suport.patch	2014-01-14 12:56:22.902046416 -0500
@@ -0,0 +1,39 @@
+--- a/arch/mips/ath79/machtypes.h
++++ b/arch/mips/ath79/machtypes.h
+@@ -106,6 +106,7 @@ enum ath79_mach_type {
+ 	ATH79_MACH_TL_WDR4300,		/* TP-LINK TL-WDR4300 */
+ 	ATH79_MACH_TL_WR1041N_V2,	/* TP-LINK TL-WR1041N v2 */
+ 	ATH79_MACH_TL_WR1043ND,		/* TP-LINK TL-WR1043ND */
++	ATH79_MACH_TL_WR1043ND_V2,	/* TP-LINK TL-WR1043ND v2 */
+ 	ATH79_MACH_TL_WR2543N,		/* TP-LINK TL-WR2543N/ND */
+ 	ATH79_MACH_TL_WR703N,		/* TP-LINK TL-WR703N */
+ 	ATH79_MACH_TL_WR710N,		/* TP-LINK TL-WR710N */
+--- a/arch/mips/ath79/Kconfig
++++ b/arch/mips/ath79/Kconfig
+@@ -726,6 +726,16 @@ config ATH79_MACH_TL_WR1043ND
+ 	select ATH79_DEV_USB
+ 	select ATH79_DEV_WMAC
+ 
++config ATH79_MACH_TL_WR1043ND_V2
++	bool "TP-LINK TL-WR1043ND v2 support"
++	select SOC_QCA955X
++	select ATH79_DEV_ETH
++	select ATH79_DEV_GPIO_BUTTONS
++	select ATH79_DEV_LEDS_GPIO
++	select ATH79_DEV_SPI
++	select ATH79_DEV_USB
++	select ATH79_DEV_WMAC
++
+ config ATH79_MACH_TL_WR2543N
+ 	bool "TP-LINK TL-WR2543N/ND support"
+ 	select SOC_AR724X
+--- a/arch/mips/ath79/Makefile
++++ b/arch/mips/ath79/Makefile
+@@ -100,6 +100,7 @@ obj-$(CONFIG_ATH79_MACH_TL_WR841N_V8)	+=
+ obj-$(CONFIG_ATH79_MACH_TL_WR941ND)	+= mach-tl-wr941nd.o
+ obj-$(CONFIG_ATH79_MACH_TL_WR1041N_V2)	+= mach-tl-wr1041n-v2.o
+ obj-$(CONFIG_ATH79_MACH_TL_WR1043ND)	+= mach-tl-wr1043nd.o
++obj-$(CONFIG_ATH79_MACH_TL_WR1043ND_V2)	+= mach-tl-wr1043nd-v2.o
+ obj-$(CONFIG_ATH79_MACH_TL_WR2543N)	+= mach-tl-wr2543n.o
+ obj-$(CONFIG_ATH79_MACH_TL_WR703N)	+= mach-tl-wr703n.o
+ obj-$(CONFIG_ATH79_MACH_TL_WR720N_V3)	+= mach-tl-wr720n-v3.o
--- a/tools/firmware-utils/src/mktplinkfw.c	2014-01-12 12:48:10.289137450 -0500
+++ b/tools/firmware-utils/src/mktplinkfw.c	2014-01-14 12:56:22.902046416 -0500
@@ -50,6 +50,7 @@
 #define HWID_TL_WR941ND_V2	0x09410002
 #define HWID_TL_WR941ND_V4	0x09410004
 #define HWID_TL_WR1043ND_V1	0x10430001
+#define HWID_TL_WR1043ND_V2	0x10430002
 #define HWID_TL_WR1041N_V2	0x10410002
 #define HWID_TL_WR2543N_V1	0x25430001
 
@@ -279,6 +280,11 @@
 		.hw_rev		= 1,
 		.layout_id	= "8M",
 	}, {
+		.id		= "TL-WR1043NDv2",
+		.hw_id		= HWID_TL_WR1043ND_V2,
+		.hw_rev		= 1,
+		.layout_id	= "8Mlzma",
+	}, {
 		.id		= "TL-WR2543Nv1",
 		.hw_id		= HWID_TL_WR2543N_V1,
 		.hw_rev		= 1,
--- a/target/linux/generic/files/drivers/net/phy/ar8216.c	(revision 34846)
+++ b/target/linux/generic/files/drivers/net/phy/ar8216.c	(revision 34847)
@@ -1075,17 +1075,11 @@
 
 static void
-ar8327_init_cpuport(struct ar8216_priv *priv)
-{
-	struct ar8327_platform_data *pdata;
-	struct ar8327_port_cfg *cfg;
+ar8327_config_port(struct ar8216_priv *priv, unsigned int port,
+		    struct ar8327_port_cfg *cfg)
+{
 	u32 t;
 
-	pdata = priv->phy->dev.platform_data;
-	if (!pdata)
-		return;
-
-	cfg = &pdata->cpuport_cfg;
-	if (!cfg->force_link) {
-		priv->write(priv, AR8327_REG_PORT_STATUS(AR8216_PORT_CPU),
+	if (!cfg || !cfg->force_link) {
+		priv->write(priv, AR8327_REG_PORT_STATUS(port),
 			    AR8216_PORT_STATUS_LINK_AUTO);
 		return;
@@ -1096,4 +1090,5 @@
 	t |= cfg->rxpause ? AR8216_PORT_STATUS_RXFLOW : 0;
 	t |= cfg->txpause ? AR8216_PORT_STATUS_TXFLOW : 0;
+
 	switch (cfg->speed) {
 	case AR8327_PORT_SPEED_10:
@@ -1108,5 +1103,5 @@
 	}
 
-	priv->write(priv, AR8327_REG_PORT_STATUS(AR8216_PORT_CPU), t);
+	priv->write(priv, AR8327_REG_PORT_STATUS(port), t);
 }
 
@@ -1114,13 +1109,19 @@
 ar8327_init_port(struct ar8216_priv *priv, int port)
 {
+	struct ar8327_platform_data *pdata;
+	struct ar8327_port_cfg *cfg;
 	u32 t;
 
-	if (port == AR8216_PORT_CPU) {
-		ar8327_init_cpuport(priv);
-	} else {
-		t = AR8216_PORT_STATUS_LINK_AUTO;
-		priv->write(priv, AR8327_REG_PORT_STATUS(port), t);
-	}
-
+	pdata = priv->phy->dev.platform_data;
+
+	if (pdata && port == AR8216_PORT_CPU)
+		cfg = &pdata->cpuport_cfg;
+	else if (pdata && port == 6)
+		cfg = &pdata->port6_cfg;
+	else
+		cfg = NULL;
+
+	ar8327_config_port(priv, port, cfg);
+	
 	priv->write(priv, AR8327_REG_PORT_HEADER(port), 0);
 
--- a/target/linux/generic/files/include/linux/ar8216_platform.h	(revision 34846)
+++ b/target/linux/generic/files/include/linux/ar8216_platform.h	(revision 34847)
@@ -76,4 +76,5 @@
 	struct ar8327_pad_cfg *pad6_cfg;
 	struct ar8327_port_cfg cpuport_cfg;
+	struct ar8327_port_cfg port6_cfg;
 	struct ar8327_led_cfg *led_cfg;
 };
--- a/package/base-files/files/lib/preinit/99_10_failsafe_login	2014-01-12 12:48:12.581100190 -0500
+++ b/package/base-files/files/lib/preinit/99_10_failsafe_login	2014-01-15 07:32:09.922299517 -0500
@@ -4,6 +4,20 @@
 
 failsafe_netlogin () {
     telnetd -l /bin/login.sh <> /dev/null 2>&1    
+	
+    if [ -e /lib/ar71xx.sh ] ; then
+	. /lib/ar71xx.sh
+	board_name=$(ar71xx_board_name)
+	if [ "$board_name" = "tl-wr1043nd-v2" ] ; then
+		mkdir /tmp/config
+		cp /etc/config/* /tmp/config
+		mount --bind /tmp/config /etc/config
+		sh /etc/uci-defaults/network
+		/etc/init.d/network restart
+		sleep 2
+		umount /etc/config
+	fi
+    fi
 }
 
 failsafe_shell() {
