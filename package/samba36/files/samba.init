#!/bin/sh /etc/rc.common
# Copyright (C) 2008-2012 OpenWrt.org

START=60
USE_PROCD=1

found_sambashare="0"

smb_header() {
	config_get samba_iface $1 interface "loopback lan"

	# resolve interfaces
	local interfaces=$(
		. /lib/functions/network.sh

		local net
		for net in $samba_iface; do
			local device
			network_is_up $net || continue
			network_get_device device "$net"
			echo -n "${device:-$net} "
		done
	)

	local name workgroup description charset
	local hostname="$(uci_get system.@system[0].hostname)"

	config_get name        $1 name        "${hostname:-OpenWrt}"
	config_get workgroup   $1 workgroup   "${hostname:-OpenWrt}"
	config_get description $1 description "Samba on ${hostname:-OpenWrt}"
	config_get charset     $1 charset     "UTF-8"

	mkdir -p /var/etc
	sed -e "s#|NAME|#$name#g" \
	    -e "s#|WORKGROUP|#$workgroup#g" \
	    -e "s#|DESCRIPTION|#$description#g" \
	    -e "s#|INTERFACES|#$interfaces#g" \
	    -e "s#|CHARSET|#$charset#g" \
	    /etc/samba/smb.conf.template > /var/etc/smb.conf

	local homes
	config_get_bool homes $1 homes 0
	[ $homes -gt 0 ] && {
		cat <<EOT >> /var/etc/smb.conf

[homes]
	comment     = Home Directories
	browsable   = no
	read only   = no
	create mode = 0750
EOT
	}

	[ -L /etc/samba/smb.conf ] || ln -nsf /var/etc/smb.conf /etc/samba/smb.conf
}

rw_user_list=""
ro_user_list=""
all_user_list=""

add_user_to_lists()
{
	user="$1"
	read_type="$2"

	local rw_comma
	local ro_comma
	local all_comma
	if [ "$read_type" = "rw" ] ; then
		if [ -z "$rw_user_list" ] ; then  rw_comma="" ; else rw_comma=", " ; fi
		rw_user_list="$rw_user_list$rw_comma$user"
	else
		if [ -z "$ro_user_list" ] ; then  ro_comma="" ; else ro_comma=", " ; fi
		ro_user_list="$ro_user_list$ro_comma$user"
	fi
	if [ -z "$all_user_list" ] ; then all_comma="" ; else all_comma=", " ; fi
	all_user_list="$all_user_list$all_comma$user"
}

smb_add_share() {
	local name
	local path
	local users
	local read_only
	local guest_ok
	local guest_acct
	local all_comma
	local create_mask
	local dir_mask
	local browseable

	config_get name $1 name
	config_get path $1 path
	config_get users $1 users
	config_get read_only $1 read_only
	config_get guest_ok $1 guest_ok
	config_get create_mask $1 create_mask
	config_get dir_mask $1 dir_mask
	config_get browseable $1 browseable

	rw_user_list=""
	ro_user_list=""
	all_user_list=""
	config_list_foreach $1 users_ro add_user_to_lists "ro"
	config_list_foreach $1 users_rw add_user_to_lists "rw"

	guest_acct=$(grep "guest account" /var/etc/smb.conf | sed 's/\tguest account = //g')
	if [ "$guest_ok" = "yes" -a -n "$guest_acct" ] ; then
		if [ -z "$all_user_list" ] ; then all_comma="" ; else all_comma=", " ; fi
		all_user_list="$all_user_list$all_comma$guest_acct"
	fi

	[ -z "$name" -o -z "$path" ] && return

	echo -e "\n[$name]\n\tpath = $path" >> /var/etc/smb.conf
	[ -n "$all_user_list" ] && echo -e "\tvalid users = $all_user_list" >> /var/etc/smb.conf
	[ -n "$rw_user_list" ] && echo -e "\twrite list = $rw_user_list" >> /var/etc/smb.conf
	[ -n "$ro_user_list" ] && echo -e "\tread list = $ro_user_list" >> /var/etc/smb.conf
	[ -n "$read_only" ] && echo -e "\tread only = $read_only" >> /var/etc/smb.conf
	[ -n "$guest_ok" ] && echo -e "\tguest ok = $guest_ok" >> /var/etc/smb.conf
	[ -n "$create_mask" ] && echo -e "\tcreate mask = $create_mask" >> /var/etc/smb.conf
	[ -n "$dir_mask" ] && echo -e "\tdirectory mask = $dir_mask" >> /var/etc/smb.conf
	[ -n "$browseable" ] && echo -e "\tbrowseable = $browseable" >> /var/etc/smb.conf

	found_sambashare="1"
}

init_config() {
	config_load samba
	CONFIG_APPEND=1 UCI_CONFIG_DIR=/var/run/config config_load samba

	config_foreach smb_header samba
	config_foreach smb_add_share sambashare
}

service_triggers() {
	procd_add_reload_trigger samba

	local i
	for i in $samba_iface; do
		procd_add_reload_interface_trigger $i
	done
}

start_service() {
	init_config

	if [ "$found_sambashare" = "1" ] ; then
		procd_open_instance
		procd_add_mdns "smb" "tcp" "445"
		procd_set_param command /usr/sbin/smbd -F
		procd_set_param respawn
		procd_set_param file /var/etc/smb.conf
		procd_close_instance

		procd_open_instance
		procd_set_param command /usr/sbin/nmbd -F
		procd_set_param respawn
		procd_set_param file /var/etc/smb.conf
		procd_close_instance
	fi
}
